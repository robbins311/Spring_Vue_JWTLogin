{"remainingRequest":"C:\\Files\\JWT_Login\\FrontEnd_Vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Files\\JWT_Login\\FrontEnd_Vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Files\\JWT_Login\\FrontEnd_Vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Files\\JWT_Login\\FrontEnd_Vue\\src\\components\\UploadFiles.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Files\\JWT_Login\\FrontEnd_Vue\\src\\components\\UploadFiles.vue","mtime":1641871976833},{"path":"C:\\Files\\JWT_Login\\FrontEnd_Vue\\babel.config.js","mtime":1639620512000},{"path":"C:\\Files\\JWT_Login\\FrontEnd_Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641266792093},{"path":"C:\\Files\\JWT_Login\\FrontEnd_Vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1641266792078},{"path":"C:\\Files\\JWT_Login\\FrontEnd_Vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1641266792093},{"path":"C:\\Files\\JWT_Login\\FrontEnd_Vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1641266836484}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFVwbG9hZFNlcnZpY2UgZnJvbSAiLi4vc2VydmljZXMvVXBsb2FkRmlsZXNTZXJ2aWNlIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJ1cGxvYWQtZmlsZXMiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzZWxlY3RlZEZpbGVzOiB1bmRlZmluZWQsCiAgICAgIGN1cnJlbnRGaWxlOiB1bmRlZmluZWQsCiAgICAgIHByb2dyZXNzOiAwLAogICAgICBtZXNzYWdlOiAiIiwKICAgICAgZmlsZUluZm9zOiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHNlbGVjdEZpbGU6IGZ1bmN0aW9uIHNlbGVjdEZpbGUoKSB7CiAgICAgIHRoaXMuc2VsZWN0ZWRGaWxlcyA9IHRoaXMuJHJlZnMuZmlsZS5maWxlczsKICAgIH0sCiAgICB1cGxvYWQ6IGZ1bmN0aW9uIHVwbG9hZCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMucHJvZ3Jlc3MgPSAwOwogICAgICB0aGlzLmN1cnJlbnRGaWxlID0gdGhpcy5zZWxlY3RlZEZpbGVzLml0ZW0oMCk7CiAgICAgIFVwbG9hZFNlcnZpY2UudXBsb2FkKHRoaXMuY3VycmVudEZpbGUsIGZ1bmN0aW9uIChldmVudCkgewogICAgICAgIF90aGlzLnByb2dyZXNzID0gTWF0aC5yb3VuZCgxMDAgKiBldmVudC5sb2FkZWQgLyBldmVudC50b3RhbCk7CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXMubWVzc2FnZSA9IHJlc3BvbnNlLmRhdGEubWVzc2FnZTsKICAgICAgICByZXR1cm4gVXBsb2FkU2VydmljZS5nZXRGaWxlcygpOwogICAgICB9KS50aGVuKGZ1bmN0aW9uIChmaWxlcykgewogICAgICAgIF90aGlzLmZpbGVJbmZvcyA9IGZpbGVzLmRhdGE7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpcy5wcm9ncmVzcyA9IDA7CiAgICAgICAgX3RoaXMubWVzc2FnZSA9ICJDb3VsZCBub3QgdXBsb2FkIHRoZSBmaWxlISI7CiAgICAgICAgX3RoaXMuY3VycmVudEZpbGUgPSB1bmRlZmluZWQ7CiAgICAgIH0pOwogICAgICB0aGlzLnNlbGVjdGVkRmlsZXMgPSB1bmRlZmluZWQ7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgVXBsb2FkU2VydmljZS5nZXRGaWxlcygpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIF90aGlzMi5maWxlSW5mb3MgPSByZXNwb25zZS5kYXRhOwogICAgfSk7CiAgfQp9Ow=="},{"version":3,"sources":["UploadFiles.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA,OAAA,aAAA,MAAA,gCAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,aAAA,EAAA,SADA;AAEA,MAAA,WAAA,EAAA,SAFA;AAGA,MAAA,QAAA,EAAA,CAHA;AAIA,MAAA,OAAA,EAAA,EAJA;AAMA,MAAA,SAAA,EAAA;AANA,KAAA;AAQA,GAXA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,WAAA,aAAA,GAAA,KAAA,KAAA,CAAA,IAAA,CAAA,KAAA;AACA,KAHA;AAIA,IAAA,MAJA,oBAIA;AAAA;;AACA,WAAA,QAAA,GAAA,CAAA;AAEA,WAAA,WAAA,GAAA,KAAA,aAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AACA,MAAA,aAAA,CAAA,MAAA,CAAA,KAAA,WAAA,EAAA,UAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,QAAA,GAAA,IAAA,CAAA,KAAA,CAAA,MAAA,KAAA,CAAA,MAAA,GAAA,KAAA,CAAA,KAAA,CAAA;AACA,OAFA,EAGA,IAHA,CAGA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,QAAA,CAAA,IAAA,CAAA,OAAA;AACA,eAAA,aAAA,CAAA,QAAA,EAAA;AACA,OANA,EAOA,IAPA,CAOA,UAAA,KAAA,EAAA;AACA,QAAA,KAAA,CAAA,SAAA,GAAA,KAAA,CAAA,IAAA;AACA,OATA,EAUA,KAVA,CAUA,YAAA;AACA,QAAA,KAAA,CAAA,QAAA,GAAA,CAAA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,4BAAA;AACA,QAAA,KAAA,CAAA,WAAA,GAAA,SAAA;AACA,OAdA;AAgBA,WAAA,aAAA,GAAA,SAAA;AACA;AAzBA,GAZA;AAuCA,EAAA,OAvCA,qBAuCA;AAAA;;AACA,IAAA,aAAA,CAAA,QAAA,GAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,MAAA,MAAA,CAAA,SAAA,GAAA,QAAA,CAAA,IAAA;AACA,KAFA;AAGA;AA3CA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <div v-if=\"currentFile\" class=\"progress\">\r\n      <div\r\n        class=\"progress-bar progress-bar-info progress-bar-striped\"\r\n        role=\"progressbar\"\r\n        :aria-valuenow=\"progress\"\r\n        aria-valuemin=\"0\"\r\n        aria-valuemax=\"100\"\r\n        :style=\"{ width: progress + '%' }\"\r\n      >\r\n        {{ progress }}%\r\n      </div>\r\n    </div>\r\n\r\n    <label class=\"btn btn-default\">\r\n      <input type=\"file\" ref=\"file\" @change=\"selectFile\" />\r\n    </label>\r\n\r\n    <button class=\"btn btn-success\" :disabled=\"!selectedFiles\" @click=\"upload\">\r\n      Upload\r\n    </button>\r\n\r\n    <div class=\"alert alert-light\" role=\"alert\">{{ message }}</div>\r\n\r\n    <div class=\"card\">\r\n      <div class=\"card-header\">List of Files</div>\r\n      <ul class=\"list-group list-group-flush\">\r\n        <li\r\n          class=\"list-group-item\"\r\n          v-for=\"(file, index) in fileInfos\"\r\n          :key=\"index\"\r\n        >\r\n          <a :href=\"file.url\">{{ file.name }}</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport UploadService from \"../services/UploadFilesService\"\r\nexport default {\r\n  name: \"upload-files\",\r\n  data() {\r\n    return {\r\n      selectedFiles: undefined,\r\n      currentFile: undefined,\r\n      progress: 0,\r\n      message: \"\",\r\n\r\n      fileInfos: []\r\n    };\r\n  },\r\n  methods: {\r\n    selectFile() {\r\n      this.selectedFiles = this.$refs.file.files;\r\n    },\r\n    upload() {\r\n      this.progress = 0;\r\n\r\n      this.currentFile = this.selectedFiles.item(0);\r\n      UploadService.upload(this.currentFile, event => {\r\n        this.progress = Math.round((100 * event.loaded) / event.total);\r\n      })\r\n        .then(response => {\r\n          this.message = response.data.message;\r\n          return UploadService.getFiles();\r\n        })\r\n        .then(files => {\r\n          this.fileInfos = files.data;\r\n        })\r\n        .catch(() => {\r\n          this.progress = 0;\r\n          this.message = \"Could not upload the file!\";\r\n          this.currentFile = undefined;\r\n        });\r\n\r\n      this.selectedFiles = undefined;\r\n    }\r\n  },\r\n  mounted() {\r\n    UploadService.getFiles().then(response => {\r\n      this.fileInfos = response.data;\r\n    });\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/components"}]}